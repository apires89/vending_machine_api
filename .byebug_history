c
params
current_user
exit
log_out_success
current_user
exit
@product.errors.full_messages
@product.errors
@product
exit
exitÂ´
exitr
c
current_user
exit
current_user
user_signed_in?
exit
     unless user_signed_in?
   130:       render json: { message: "Not logged in", status: "failed" }, status: :unprocessable_entity
   131:       return
   132:     end
user_signed_in?
c
product.reload.amountAvailable
product.amountAvailable - 1
expect(product.reload.amountAvailable).to eq(product.amountAvailable - 1)
product.reload.amountAvailable
product
product.amountAvailable
exit
product.amountAvailable
product.reload.amountAvailable
product.reload
product
exit
valid_amount.include?(deposit_params["deposit"])
deposit_params
exit
response
exit
post :deposit, params: { user: { deposit: 20 } }
deposit_amount
response
exit
change = change - Money.new(100)
Money.new(100)
change = change - 100
change.cents = change.cents - 100
change.cents -= 100
change.cents >= 100
change.cents
change.number
change.value
change
c
current_user
exit
request.headers['Authorization']
jwt_payload = JWT.decode(request.headers['Authorization'].split(' ')[1],
    Rails.application.credentials.fetch(:devise)[:jwt_secret_key]).first
User.find(jwt_payload['sub'])
user_signed_in?
current_user
exit
params
current_user
user_signed_in?
exit
resource.role
exit
resource.role
params
resource
exit
exitr
resource.role
params
request.body
request
response
resource
